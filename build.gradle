buildscript {
    repositories {
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
        gradlePluginPortal()
    }

    dependencies {
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
    id 'maven-publish'
}

// Environment variables for the build set by the build server
ext.buildNumber = System.env.BUILD_NUMBER ?: '0'

defaultTasks 'clean', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

archivesBaseName = project.name.toLowerCase()

project.ext.getGitHash = {
    def command = Runtime.getRuntime().exec("git rev-parse --short HEAD")
    def result = command.waitFor()
    return (result == 0) ? command.inputStream.text.trim() : "nogit"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'aikar'
        url = 'https://repo.aikar.co/content/groups/aikar'
    }
    maven {
        name = 'griefdefender'
        url = 'https://repo.glaremasters.me/repository/bloodshot'
    }
    maven {
        name = 'sonatype_releases'
        url = 'https://oss.sonatype.org/content/repositories/releases'
    }
    maven {
        name = 'sonatype_snapshots'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}

dependencies {
    implementation "com.flowpowered:flow-math:1.0.3"
    compileOnly "com.google.inject:guice:5.0.1"
    compileOnly "org.ow2.asm:asm:9.1"
    implementation "io.leangen.geantyref:geantyref:1.3.11"
    implementation "net.kyori:event-api:5.0.0-SNAPSHOT"
    implementation "net.kyori:adventure-api:4.11.0"
    implementation "net.kyori:examination-api:1.3.0"
    implementation "net.kyori:examination-string:1.3.0"
    implementation ("net.kyori:adventure-text-serializer-legacy:4.11.0") {
        transitive = false
    }
    implementation ("net.kyori:adventure-text-serializer-plain:4.11.0") {
        transitive = false
    }
    implementation ("net.kyori:adventure-text-serializer-gson:4.11.0") {
        transitive = false
    }
    implementation ("net.kyori:adventure-key:4.11.0") {
        transitive = false
    }
    implementation ("org.checkerframework:checker-qual:3.12.0") {
        transitive = false
    }
}

jar {
    manifest.attributes('Implementation-Title': 'GriefDefenderAPI')
    manifest.attributes('Implementation-Version': "$version")
    manifest.attributes('Git-Hash': project.ext.getGitHash())
    classifier = ''
}

tasks.assemble {
   dependsOn(tasks.shadowJar)
}

artifacts {
    archives shadowJar
}

shadowJar {
    classifier = ""
    dependencies {
        include dependency("com.flowpowered:flow-math:1.0.3")
        include dependency("io.leangen.geantyref:geantyref:1.3.11")
        include dependency("net.kyori:adventure-api:4.11.0")
        include dependency("net.kyori:event-api:5.0.0-SNAPSHOT")
        include dependency("net.kyori:examination-api:1.3.0")
        include dependency("net.kyori:examination-string:1.3.0")
        include dependency("net.kyori:adventure-key:4.11.0")
        include dependency("net.kyori:adventure-text-serializer-legacy:4.11.0")
        include dependency("net.kyori:adventure-text-serializer-plain:4.11.0")
        include dependency("net.kyori:adventure-text-serializer-gson:4.11.0")
        include dependency("org.checkerframework:checker-qual:3.12.0")
    }
    relocate("net.kyori", "com.griefdefender.lib.kyori")
    relocate("io.leangen.geantyref", "com.griefdefender.lib.geantyref")
    relocate("com.flowpowered", "com.griefdefender.lib.flowpowered")
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


publishing {
    repositories {
        maven {
            name = "OSSRH"
            url = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            credentials {
                username = System.getenv("OSSRH_TOKEN") ?: ""
                password = System.getenv("OSSRH_TOKEN_PASSWORD") ?: ""
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = 'com.griefdefender'
            artifactId = 'api'
            version = '2.1.1-SNAPSHOT'
            
            pom {
                name = 'GriefDefender'
                description = 'Defend your servers from grief.'
                url = 'https://www.griefdefender.com'

                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'bloodmc'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/bloodmc/GriefDefenderAPI.git'
                    developerConnection = 'scm:git:ssh://github.com:bloodmc/GriefDefenderAPI.git'
                    url = 'https://github.com/bloodmc/GriefDefenderAPI'
                }
            }

            from components.java
        }
    }
}